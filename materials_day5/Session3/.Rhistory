genome <- readData("data", format = "VCF")
library(vcfR)
library(PopGenome)
library(pegas)
genome <- readData("data", format = "VCF")
rm(genome)
ICgenome <- readData("data", format = "VCF")
ICgenome
IC.data <- read.vcfR("data/cotedIvoire_DP10_Q20_miss_maf5.vcf")
ICdna <- vcfR2DNAbin(IC.data)
ICdna
# Remember to replace the variable name with your own GENOME object!
neut <- neutrality.stats(ICgenome)
get.neutrality(neut)
# To see results:
neut@Fu.Li.F
neut@Fu.Li.D
neut@Tajima.D
tajima <- tajima.test(YRIdna)
tajima <- tajima.test(ICdna)
tajima
ICgenome <- readData(".", format = "VCF")
ICgenome <- readData("test", format = "VCF")
ICgenome
IC.data <- read.vcfR("test/test.vcf")
ICdna <- vcfR2DNAbin(IC.data)
library(vcfR)
library(PopGenome)
library(pegas)
ICgenome <- readData("test", format = "VCF")
IC.data <- read.vcfR("test/test.vcf")
ICdna <- vcfR2DNAbin(IC.data)
ICdna
tajima <- tajima.test(ICdna)
tajima
library(rehh)
hap <- hap_file = "data/cotedIvoire_DP10_Q20_miss_maf5.vcf",
hap <- data2haplohh(hap_file = "data/cotedIvoire_DP10_Q20_miss_maf5.vcf",
polarize_vcf = FALSE,
vcf_reader = "vcfR",
chr.name = "Pf3D7_07_v3")
?data2haplohh
# perform scan on a single chromosome (calculate iHH values)
ehh <- scan_hh(hap)
ihs <- ihh2ihs(ehh, freqbin = 0.025)
View(ihs)
ihs$ihs
?calc_candidate_regions
cr.se <- calc_candidate_regions(ihs, threshold = 2, pval = TRUE, window_size = 3000, overlap = 300, min_n_extr_mrk = 1)
cr.se
cr.se <- calc_candidate_regions(ihs, threshold = NA, pval = TRUE, window_size = 3000, overlap = 300, min_n_extr_mrk = 1)
cr.se <- calc_candidate_regions(ihs, threshold = 1, pval = TRUE, window_size = 3000, overlap = 300, min_n_extr_mrk = 1)
cr.se
cr.se <- calc_candidate_regions(ihs, threshold = 2, pval = TRUE, window_size = 3000, overlap = 300, min_n_extr_mrk = 1)
cr.se
cr.se <- calc_candidate_regions(ihs, threshold = 1.5, pval = TRUE, window_size = 3000, overlap = 300, min_n_extr_mrk = 1)
cr.se
cr.se <- calc_candidate_regions(ihs, threshold = 2, pval = TRUE, window_size = 3000, overlap = 300, min_n_extr_mrk = 1)
cr.se
manhattanplot(ihs, pval = TRUE, threshold = 2, pch = 16, chr.name = "Pf3D7_07_v3", cr = cr.se, main = "iHS")
cr.se
library(tidyverse)
pihs < -as_tibble(ihs$ihs[,c(2,4)])
pihs <- as_tibble(ihs$ihs[,c(2,4)])
sig.pihs<-
pihs %>%
filter(LOGPVALUE >= 2)
sig.pihs
ehh_77585 <- calc_ehh(hap,mrk="Pf3D7_07_v3-77585")
View(pihs)
ehh_77585 <- calc_ehh(hap,mrk="Pf3D7_07_v3-552986")
?calc_ehh
ehh_77585 <- calc_ehh(hap, mrk = "552986")
View(ihs)
View(hap)
data(hap)
hap
ehh_77585 <- calc_ehh(hap)
ehh_77585 <- calc_ehh(hap, mrk = NA)
ehh_77585 <- calc_ehh(hap, mrk = "Pf3D7_07_v3:552986")
hap <- data2haplohh(hap_file = "../cotedIvoire_DP10_Q20_miss_maf5.vcf",
polarize_vcf = FALSE,
vcf_reader = "vcfR",
chr.name = "Pf3D7_07_v3")
# perform scan on a single chromosome (calculate iHH values)
ehh <- scan_hh(hap)
ihs <- ihh2ihs(ehh, freqbin = 0.025)
cr.se <- calc_candidate_regions(ihs, threshold = 2, pval = TRUE, window_size = 3000, overlap = 300, min_n_extr_mrk = 1)
cr.se
manhattanplot(ihs, pval = TRUE, threshold = 2, pch = 16, chr.name = "Pf3D7_07_v3", cr = cr.se, main = "iHS (Pf3D7_07_v3)")
pihs <- as_tibble(ihs$ihs[,c(2,4)])
sig.pihs<-
pihs %>%
filter(LOGPVALUE >= 2)
sig.pihs
ehh_77585 <- calc_ehh(hap, mrk = "Pf3D7_07_v3:507272")
plot(ehh_507272,
main="EHH at Pf3D7_07_v3:507272",
col=c("blue2","gold2"))
ehh_507272 <- calc_ehh(hap, mrk = "Pf3D7_07_v3:507272")
plot(ehh_507272,
main="EHH at Pf3D7_07_v3:507272",
col=c("blue2","gold2"))
furcation_507272 <- calc_furcation(hap, mrk = "Pf3D7_07_v3:507272")
plot(furcation_507272,
lwd = 0.1,
col = c("blue2","gold2"),
cex.lab = 0.3,
main = "Bifurcation Pf3D7_07_v3:507272",
legend.xy.coords = "none")
slide.covid <- read.table("cotedIvoire.Tajima.D",header = TRUE)
head(slide.covid)
library(tidyverse)
slide.covid.sig <- slide.covid %>%
filter(TajimaD >= 2 | TajimaD <= -2)
slide.covid.sig
Object <- c("vector", "matrix", "dataframe")
Modes <- c("Numeric, character, complex or logical or character",
"Numeric, character, complex or logical or character",
"Numeric, character, complex or logical or character")
types <- c("No", "No", "Yes")
data <- data.frame(Object, Modes, types)
names(data)[3] <- "Several modes possible in the same object?"
Object <- c("vector", "matrix", "dataframe")
Modes <- c("Numeric, character, complex or logical or character",
"Numeric, character, complex or logical or character",
"Numeric, character, complex or logical or character")
types <- c("No", "No", "Yes")
data <- data.frame(Object, Modes, types)
names(data)[3] <- "Several modes possible in the same object?"
Object <- c("vector", "matrix", "dataframe")
Modes <- c("Numeric, character, complex or logical or character",
"Numeric, character, complex or logical or character",
"Numeric, character, complex or logical or character")
types <- c("No", "No", "Yes")
data <- data.frame(Object, Modes, types)
names(data)[3] <- "Several modes possible in the same object?"
data
setwd("/media/Data/Data/Documents_Karim/Fadel/workshops/workshop_cote_dIvoire/Malaria_training_2022/materials_day5")
setwd("/media/Data/Data/Documents_Karim/Fadel/workshops/workshop_cote_dIvoire/Malaria_training_2022/materials_day2/session2_NGS")
setwd("/media/Data/Data/Documents_Karim/Fadel/workshops/workshop_cote_dIvoire/Malaria_training_2022/materials_day2/session2_NGS")
Sys.time()
